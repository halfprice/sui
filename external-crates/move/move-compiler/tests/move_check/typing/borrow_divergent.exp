warning[W09005]: dead or unreachable code
  ┌─ tests/move_check/typing/borrow_divergent.move:4:13
  │
4 │            &break;
  │             ^^^^^ Invalid use of a divergent expression. The code following the evaluation of this expression will be dead and should be removed.
  │
  = This warning can be suppressed with '#[allow(dead_code)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09004]: unnecessary trailing semicolon
  ┌─ tests/move_check/typing/borrow_divergent.move:4:18
  │
4 │            &break;
  │             -----^
  │             │    │
  │             │    Invalid trailing ';'
  │             │    A trailing ';' in an expression block implicitly adds a '()' value after the semicolon. That '()' value will not be reachable
  │             Any code after this expression will not be reached
  │
  = This warning can be suppressed with '#[allow(unused_trailing_semi)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09005]: dead or unreachable code
   ┌─ tests/move_check/typing/borrow_divergent.move:11:12
   │
11 │         &{ return };
   │            ^^^^^^ Invalid use of a divergent expression. The code following the evaluation of this expression will be dead and should be removed.
   │
   = This warning can be suppressed with '#[allow(dead_code)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09004]: unnecessary trailing semicolon
   ┌─ tests/move_check/typing/borrow_divergent.move:11:20
   │
11 │         &{ return };
   │            ------  ^
   │            │       │
   │            │       Invalid trailing ';'
   │            │       A trailing ';' in an expression block implicitly adds a '()' value after the semicolon. That '()' value will not be reachable
   │            Any code after this expression will not be reached
   │
   = This warning can be suppressed with '#[allow(unused_trailing_semi)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09004]: unnecessary trailing semicolon
   ┌─ tests/move_check/typing/borrow_divergent.move:18:40
   │
18 │         &(if (cond) return else return);
   │          ------------------------------^
   │          │                             │
   │          │                             Invalid trailing ';'
   │          │                             A trailing ';' in an expression block implicitly adds a '()' value after the semicolon. That '()' value will not be reachable
   │          Any code after this expression will not be reached
   │
   = This warning can be suppressed with '#[allow(unused_trailing_semi)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

