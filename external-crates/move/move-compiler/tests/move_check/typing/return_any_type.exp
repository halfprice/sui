warning[W09005]: dead or unreachable code
  ┌─ tests/move_check/typing/return_any_type.move:5:13
  │
5 │         0 + (return ());
  │             ^^^^^^^^^^^ Invalid use of a divergent expression. The code following the evaluation of this expression will be dead and should be removed.
  │
  = This warning can be suppressed with '#[allow(dead_code)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09004]: unnecessary trailing semicolon
  ┌─ tests/move_check/typing/return_any_type.move:5:24
  │
5 │         0 + (return ());
  │             -----------^
  │             │          │
  │             │          Invalid trailing ';'
  │             │          A trailing ';' in an expression block implicitly adds a '()' value after the semicolon. That '()' value will not be reachable
  │             Any code after this expression will not be reached
  │
  = This warning can be suppressed with '#[allow(unused_trailing_semi)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09005]: dead or unreachable code
  ┌─ tests/move_check/typing/return_any_type.move:9:13
  │
9 │         foo(return ());
  │             ^^^^^^^^^ Invalid use of a divergent expression. The code following the evaluation of this expression will be dead and should be removed.
  │
  = This warning can be suppressed with '#[allow(dead_code)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09004]: unnecessary trailing semicolon
  ┌─ tests/move_check/typing/return_any_type.move:9:23
  │
9 │         foo(return ());
  │             --------- ^
  │             │         │
  │             │         Invalid trailing ';'
  │             │         A trailing ';' in an expression block implicitly adds a '()' value after the semicolon. That '()' value will not be reachable
  │             Any code after this expression will not be reached
  │
  = This warning can be suppressed with '#[allow(unused_trailing_semi)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

